
# Default values for adpulse.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
adpulse:
  fullname: "adpulse"
  namespace:
    name: "adpulse"
    labels:
      app.kubernetes.io/name: adpulse
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
  ad_manager_svc:
    name: ad-manager-svc
    labels:
      app.kubernetes.io/name: ad-manager-svc
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
    replicaCount: 1
    selectorLabels:
      app.kubernetes.io/name: ad-manager-svc
      app.kubernetes.io/instance: adpulse
    serviceAccountName: "ad-manager-svc-service-account"
    image:
      repository: adpulse18/ad-manager-svc
      pullPolicy: Always
      tag: 1.0.23
    service:
      type: LoadBalancer
      port: 5000
      targetPort: 5000
  ad_manager_frontend:
    name: ad-manager-frontend
    labels:
      app.kubernetes.io/name: ad-manager-frontend
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
    replicaCount: 1
    selectorLabels:
      app.kubernetes.io/name: ad-manager-frontend
      app.kubernetes.io/instance: adpulse
    serviceAccountName: "ad-manager-frontend-service-account"
    image:
      repository: adpulse18/ad-manager-frontend
      pullPolicy: Always
      tag: 1.0.8
    service:
      type: LoadBalancer
      port: 3000
      targetPort: 3000
  ad_server_svc:
    name: ad-server-svc
    labels:
      app.kubernetes.io/name: ad-server-svc
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
    replicaCount: 1
    selectorLabels:
      app.kubernetes.io/name: ad-server-svc
      app.kubernetes.io/instance: adpulse
    serviceAccountName: "ad-server-svc-service-account"
    image:
      repository: adpulse18/ad-server-svc
      pullPolicy: Always
      tag: 1.0.9
    service:
      type: LoadBalancer
      port: 8080
      targetPort: 8080
  adpulse_engagement_svc:
    name: adpulse-engagement-svc
    labels:
      app.kubernetes.io/name: adpulse-engagement-svc
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
    replicaCount: 1
    selectorLabels:
      app.kubernetes.io/name: adpulse-engagement-svc
      app.kubernetes.io/instance: adpulse
    serviceAccountName: "adpulse-engagement-svc-service-account"
    image:
      repository: adpulse18/adpulse-engagement-svc
      pullPolicy: Always
      tag: 1.0.9
    service:
      type: LoadBalancer
      port: 8081
      targetPort: 8081
  adpulse_engagement_subscriber_svc:
    name: adpulse-engagement-subscriber-svc
    labels:
      app.kubernetes.io/name: adpulse-engagement-subscriber-svc
      app.kubernetes.io/instance: adpulse
      app.kubernetes.io/managed-by: Helm
    replicaCount: 1
    selectorLabels:
      app.kubernetes.io/name: adpulse-engagement-subscriber-svc
      app.kubernetes.io/instance: adpulse
    serviceAccountName: "adpulse-engagement-subscriber-svc-service-account"
    image:
      repository: adpulse18/adpulse-engagement-subscriber-svc
      pullPolicy: Always
      tag: "0.0.3"
    service:
      type: LoadBalancer
      port: 5000
      targetPort: 5000
hpa:
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}
